{"version":3,"sources":["img/svg/logo.png","img/svg/add.svg","img/svg/account.svg","Components/Nav.js","Components/LoginReg.js","Components/Article.js","Components/FeedNav.js","Components/Loading.js","Container/Home.js","Container/App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","navToCrArt","bind","navToProfile","navToHome","this","navTo","className","src","logo","alt","onClick","plus","islogin","loginbtn","style","backgroundImage","userPic","Component","LoginReg","setreg","setlog","sendLogData","sendRegData","state","loc","email","document","getElementById","value","pass","dologin","name","remLogReg","setState","id","type","placeholder","Article","pic","title","text","AuthorCard","FeedNav","Loading","Home","articles","isloading","fetch","then","res","json","parJson","getarticle","map","arr","body","author","image","username","React","App","loginmenu","regUser","userDetails","loginModal","whichPage","password","method","headers","JSON","stringify","token","console","log","page","defaultUserPro","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,kNCoE5BC,E,YA7CX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAJF,E,0EAdfG,KAAKL,MAAMM,MAAM,W,kCAIjBD,KAAKL,MAAMM,MAAM,U,qCAIjBD,KAAKL,MAAMM,MAAM,e,8CAejB,OACI,6BACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,QAEX,yBAAKC,IAAKC,IAAMC,IAAI,SACpB,0CAGJ,yBAAKH,UAAU,SAEX,yBAAKI,QAASN,KAAKJ,WAAYO,IAAKI,IAAMF,IAAI,MAE9C,wBAAIC,QAASN,KAAKD,WAAlB,QAGCC,KAAKL,MAAMa,QAAU,wBAAIF,QAASN,KAAKF,cAAlB,WAEd,wBAAII,UAAU,aAAaI,QAASN,KAAKL,MAAMc,UAA/C,mBAIJT,KAAKL,MAAMa,QAAU,yBAAKN,UAAU,UAAUQ,MAAO,CAAEC,gBAAgB,OAAD,OAASX,KAAKL,MAAMiB,QAApB,QAA2C,Y,GAjD3HC,aCgGHC,E,YAlEX,WAAYnB,GAAQ,IAAD,8BACf,4CAAMA,KACDoB,OAAS,EAAKA,OAAOlB,KAAZ,gBACd,EAAKmB,OAAS,EAAKA,OAAOnB,KAAZ,gBACd,EAAKoB,YAAc,EAAKA,YAAYpB,KAAjB,gBACnB,EAAKqB,YAAc,EAAKA,YAAYrB,KAAjB,gBACnB,EAAKsB,MAAQ,CACTC,IAAK,OAPM,E,2EA7Bf,IAAIC,EAAQC,SAASC,eAAe,SAASC,MACzCC,EAAOH,SAASC,eAAe,QAAQC,MAC3CxB,KAAKL,MAAM+B,QAAQL,EAAOI,K,oCAK1B,IAAIJ,EAAQC,SAASC,eAAe,SAASC,MACzCC,EAAOH,SAASC,eAAe,QAAQC,MACvCG,EAAOL,SAASC,eAAe,QAAQC,MAC3CxB,KAAKL,MAAMiC,UAAUD,EAAMN,EAAOI,K,+BAQlCzB,KAAK6B,UAAS,WACV,MAAO,CAAET,IAAK,Y,+BAKlBpB,KAAK6B,UAAS,WACV,MAAO,CAAET,IAAK,c,8CAiBlB,OACI,6BACI,yBAAKlB,UAAU,UAAUI,QAASN,KAAKL,MAAMiC,YAE7C,yBAAK1B,UAAU,UAEX,yBAAKA,UAAU,UAEX,0BAAMI,QAASN,KAAKgB,OAAQd,UAA8B,QAAnBF,KAAKmB,MAAMC,IAAgB,aAAe,OAAjF,SACA,0BAAMd,QAASN,KAAKe,OAAQb,UAA8B,QAAnBF,KAAKmB,MAAMC,IAAgB,cAAgB,OAAlF,aAIgB,QAAnBpB,KAAKmB,MAAMC,IACR,KAEA,2BAAOU,GAAG,OAAOC,KAAK,OAAOC,YAAY,SAM7C,2BAAOF,GAAG,QAAQC,KAAK,OAAOC,YAAY,UAG1C,2BAAOF,GAAG,OAAOC,KAAK,WAAWC,YAAY,aAIzB,QAAnBhC,KAAKmB,MAAMC,IACR,4BAAQlB,UAAU,WAAWI,QAASN,KAAKiB,aAA3C,SAEA,4BAAQf,UAAU,SAASI,QAASN,KAAKkB,aAAzC,kB,GA7EDL,a,iBCIjBoB,E,iLAWE,OACI,yBAAK/B,UAAU,WACX,kBAAC,EAAD,CACIgC,IAAKlC,KAAKL,MAAMuC,IAChBP,KAAM3B,KAAKL,MAAMgC,OAGrB,6BACA,yBAAKzB,UAAU,QACX,4BAAKF,KAAKL,MAAMwC,OAChB,2BAAInC,KAAKL,MAAMyC,Y,GArBbvB,aAoChBwB,E,iLAOE,OAAQ,yBAAKnC,UAAU,cAInB,yBAAK4B,GAAG,SAAS3B,IAAKH,KAAKL,MAAMuC,IAAK7B,IAAI,aAC1C,0BAAMH,UAAU,YAAYF,KAAKL,MAAMgC,KAAvC,U,GAZad,aA4BVoB,ICxCAK,E,iLAvBP,OAEI,yBAAKpC,UAAU,OAEX,0BAAM4B,GAAG,SAAT,QACA,wCACA,uCACA,0BAAMA,GAAG,cAAT,a,GAXMjB,aCUP0B,MAVf,WACI,OAAO,6BAEH,yBAAKrC,UAAU,SAASC,IAAKC,IAAMC,IAAI,OCwDhCmC,E,YAxCb,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KAGDwB,MAAQ,CACXsB,SAAU,GACVC,WAAW,GANI,E,0EAdL,IAAD,OAEXC,MAAM,iBACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKlB,SAAS,CACZY,SAAUM,EAAQN,SAClBC,WAAW,W,yDAmBjB1C,KAAKgD,e,+BAKL,OACE,yBAAK9C,UAAU,QAGb,kBAAC,EAAD,MAGEF,KAAKmB,MAAMuB,UAAY,kBAAC,EAAD,MAAc1C,KAAKmB,MAAMsB,SAASQ,KAAI,SAACC,GAC5D,OAAO,kBAAC,EAAD,CACLf,MAAOe,EAAIf,MACXC,KAAMc,EAAIC,KACVjB,IAAKgB,EAAIE,OAAOC,MAChB1B,KAAMuB,EAAIE,OAAOE,mB,GA9CZC,IAAM1C,WCsKV2C,E,YAzEX,WAAY7D,GAAQ,IAAD,8BACf,4CAAMA,KACD+B,QAAU,EAAKA,QAAQ7B,KAAb,gBACf,EAAK4D,UAAY,EAAKA,UAAU5D,KAAf,gBACjB,EAAK+B,UAAY,EAAKA,UAAU/B,KAAf,gBACjB,EAAK6D,QAAU,EAAKA,QAAQ7D,KAAb,gBACf,EAAKI,MAAQ,EAAKA,MAAMJ,KAAX,gBAGb,EAAKsB,MAAQ,CAITwC,YAAa,GACbnD,SAAS,EACToD,YAAY,EACZC,UAAW,QAhBA,E,yEArFf7D,KAAK6B,UAAS,WACV,MAAO,CAAE+B,YAAY,Q,kCAMzB5D,KAAK6B,UAAS,WACV,MAAO,CAAE+B,YAAY,Q,8BAIrBvC,EAAOyC,GAAW,IAAD,OAErBnB,MAAM,mBAAoB,CACtBoB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Bb,KAAMc,KAAKC,UAAU,CACjB,KAAQ,CACJ,MAAS7C,EACT,SAAYyC,OAInBlB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEEA,EAAQoB,OACR,EAAKtC,UAAS,WACV,MAAO,CACH8B,YAAaZ,EACba,YAAY,EACZpD,SAAS,W,8BASzB8C,EAAUjC,EAAOI,GAAO,IAAD,OAE3BkB,MAAM,aAAc,CAChBoB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3Bb,KAAMc,KAAKC,UAAU,CACjB,KAAQ,CACJ,SAAYZ,EACZ,MAASjC,EACT,SAAYI,OAInBmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEFqB,QAAQC,IAAItB,GAERA,EAAQoB,OACR,EAAKtC,UAAS,WACV,MAAO,CACH8B,YAAaZ,EACba,YAAY,EACZpD,SAAS,W,4BAS3B8D,GAEFtE,KAAK6B,UAAS,WACV,MAAO,CACHgC,UAAWS,U,8CAgCnB,IAAIA,EAcJ,MAb6B,SAAzBtE,KAAKmB,MAAM0C,YACXS,EAAQ,kBAAC,EAAD,OAEiB,YAAzBtE,KAAKmB,MAAM0C,YACXS,EAAQ,qCAEiB,UAAzBtE,KAAKmB,MAAM0C,YACXS,EAAQ,sDAIZF,QAAQC,IAAIC,GAIR,6BAGQtE,KAAKmB,MAAMyC,WAEP,kBAAE,EAAF,CACIlC,QAAS1B,KAAK0B,QACdE,UAAW5B,KAAK0D,UAElB,KAGV,kBAAC,EAAD,CACIzD,MAAOD,KAAKC,MACZO,QAASR,KAAKmB,MAAMX,QACpBC,SAAUT,KAAKyD,UACf7C,QAASZ,KAAKmB,MAAMwC,YAAYN,MAAQrD,KAAKmB,MAAMwC,YAAYN,MAAQkB,MAG1ED,O,GAvJCf,IAAM1C,WCKJ2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASxD,SAASC,eAAe,SD4H3C,kBAAmBwD,WACrBA,UAAUC,cAAcC,MACrBrC,MAAK,SAAAsC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjB,QAAQiB,MAAMA,EAAMC,c","file":"static/js/main.95854d3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2810b0e6.png\";","module.exports = __webpack_public_path__ + \"static/media/add.303fe227.svg\";","module.exports = __webpack_public_path__ + \"static/media/account.b52edd56.svg\";","import React, { Component } from 'react';\nimport logo from '../img/svg/logo.png';\nimport plus from '../img/svg/add.svg';\n\n\nclass Nav extends Component {\n\n\n    navToCrArt() {\n        this.props.navTo(\"CrArt\");\n    }\n\n    navToHome() {\n        this.props.navTo(\"home\")\n    }\n\n    navToProfile() {\n        this.props.navTo('profile')\n    }\n\n    // user define function ^^^^^^^^^^^^^^\n\n\n    constructor(props) {\n        super(props)\n        this.navToCrArt = this.navToCrArt.bind(this)\n        this.navToProfile = this.navToProfile.bind(this)\n        this.navToHome = this.navToHome.bind(this)\n    }\n\n    render() {\n\n        return (\n            <nav>\n                <div className=\"nav-con\">\n                    <div className=\"logo\">\n\n                        <img src={logo} alt=\"logo\" ></img>\n                        <span>SPUTNIK</span>\n                    </div>\n\n                    <div className=\"links\">\n\n                        <img onClick={this.navToCrArt} src={plus} alt=\"+\"></img>\n\n                        <li onClick={this.navToHome}>\n                            Home\n                        </li>\n                        {this.props.islogin ? <li onClick={this.navToProfile}>\n                            Profile\n                        </li> : <li className=\"logReg_btn\" onClick={this.props.loginbtn}>Login/ Register</li>}\n\n\n                        {\n                            this.props.islogin ? <div className=\"userPic\" style={{ backgroundImage: `url(${this.props.userPic})` }}></div> : null\n                        }\n\n                    </div>\n                </div>\n\n\n            </nav >\n        )\n    }\n}\n\n\n\nexport default Nav;","import React, { Component } from 'react';\n\n\nclass LoginReg extends Component {\n\n    sendLogData() {\n        let email = document.getElementById('email').value\n        let pass = document.getElementById('pass').value\n        this.props.dologin(email, pass)\n\n    }\n\n    sendRegData() {\n        let email = document.getElementById('email').value\n        let pass = document.getElementById('pass').value\n        let name = document.getElementById('name').value\n        this.props.remLogReg(name, email, pass)\n\n\n\n    }\n\n    setreg() {\n\n        this.setState(() => {\n            return { loc: \"reg\" }\n        })\n    }\n    setlog() {\n\n        this.setState(() => {\n            return { loc: \"log\" }\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.setreg = this.setreg.bind(this)\n        this.setlog = this.setlog.bind(this)\n        this.sendLogData = this.sendLogData.bind(this)\n        this.sendRegData = this.sendRegData.bind(this)\n        this.state = {\n            loc: \"log\"\n        }\n    }\n\n\n    render() {\n        return (\n            <div >\n                <div className=\"overlay\" onClick={this.props.remLogReg}></div>\n\n                <div className=\"logReg\">\n\n                    <div className=\"logNav\">\n\n                        <span onClick={this.setlog} className={this.state.loc === \"log\" ? \"active log\" : \"log\"}  >Login</span>\n                        <span onClick={this.setreg} className={this.state.loc === \"reg\" ? \"active reg \" : \"reg\"} >Register</span>\n\n                    </div>\n\n                    {this.state.loc === \"log\" ?\n                        null\n                        :\n                        <input id=\"name\" type=\"text\" placeholder=\"Name\" />\n\n                    }\n\n\n\n                    <input id=\"email\" type=\"text\" placeholder=\"Email\" />\n\n\n                    <input id=\"pass\" type=\"password\" placeholder=\"Password\" />\n\n\n\n                    {this.state.loc === \"log\" ?\n                        <button className=\"loginBtn\" onClick={this.sendLogData}>Login</button>\n                        :\n                        <button className=\"regBtn\" onClick={this.sendRegData}>Register</button>\n\n                    }\n\n\n\n                </div >\n\n\n\n\n\n\n            </div >\n\n        )\n    }\n}\n\n\n\nexport default LoginReg;","import React, { Component } from 'react';\n\n\n\n\n\n\nclass Article extends Component {\n\n\n\n\n\n\n\n\n    render() {\n\n        return (\n            <div className=\"article\">\n                <AuthorCard\n                    pic={this.props.pic}\n                    name={this.props.name}\n                />\n\n                <br></br>\n                <div className=\"body\">\n                    <h1>{this.props.title}</h1>\n                    <p>{this.props.text}</p>\n                </div>\n\n\n\n\n\n            </div>\n        )\n    }\n}\n\n\n\n\nclass AuthorCard extends Component {\n\n\n\n    render() {\n\n\n        return (<div className=\"authorCard\">\n\n\n\n            <img id=\"proPic\" src={this.props.pic} alt=\"Profile \" />\n            <span className=\"authName\">{this.props.name} </span>\n\n\n\n\n        </div >)\n    }\n\n\n\n}\n\n\n\n\n\nexport default Article;","import React, { Component } from 'react'\n\n\n\nclass FeedNav extends Component {\n\n    render() {\n\n        return (\n\n            <div className=\"bar\">\n\n                <span id=\"first\">Feed</span>\n                <span>Global</span>\n                <span>Trend</span>\n                <span id=\"noneBorder\">Tags</span>\n\n\n\n            </div>\n\n        )\n\n\n    }\n\n\n\n}\n\n\nexport default FeedNav","import React from 'react'\nimport logo from '../img/svg/logo.png'\n\n\nfunction Loading() {\n    return <div>\n\n        <img className=\"loader\" src={logo} alt=\"\" />\n\n    </div>\n\n\n}\n\nexport default Loading;","import React from 'react';\nimport Article from '../Components/Article'\nimport FeedNav from '../Components/FeedNav'\nimport Loading from '../Components/Loading'\n\n\nclass Home extends React.Component {\n\n\n  getarticle() {\n\n    fetch('/api/articles')\n      .then(res => res.json())\n      .then(parJson => {\n        this.setState({\n          articles: parJson.articles,\n          isloading: false\n        })\n      })\n\n  }\n\n\n  constructor(props) {\n    super(props)\n\n\n    this.state = {\n      articles: [],\n      isloading: true,\n    }\n\n  }\n\n  componentDidMount() {\n    this.getarticle()\n  }\n\n  render() {\n\n    return (\n      <div className=\"Home\">\n\n\n        <FeedNav />\n\n        {\n          this.state.isloading ? <Loading /> : this.state.articles.map((arr) => {\n            return <Article\n              title={arr.title}\n              text={arr.body}\n              pic={arr.author.image}\n              name={arr.author.username}\n            />\n\n          })\n        }\n\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport Nav from '../Components/Nav';\nimport LoginReg from '../Components/LoginReg';\nimport defaultUserPro from '../img/svg/account.svg'\nimport Home from './Home'\n\n\nclass App extends React.Component {\n\n    // User defined functions    \n\n\n    loginmenu() {\n\n        this.setState(() => {\n            return { loginModal: true }\n        })\n    }\n\n    remLogReg() {\n\n        this.setState(() => {\n            return { loginModal: false }\n        })\n    }\n\n    dologin(email, password) {\n\n        fetch('/api/users/login', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                \"user\": {\n                    \"email\": email,\n                    \"password\": password\n                }\n            })\n        })\n            .then(res => res.json())\n            .then(parJson => {\n\n                if (parJson.token) {\n                    this.setState(() => {\n                        return {\n                            userDetails: parJson,\n                            loginModal: false,\n                            islogin: true\n                        }\n                    })\n                }\n\n            })\n\n    }\n\n    regUser(username, email, pass) {\n\n        fetch('/api/users', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                \"user\": {\n                    \"username\": username,\n                    \"email\": email,\n                    \"password\": pass\n                }\n            })\n        })\n            .then(res => res.json())\n            .then(parJson => {\n\n                console.log(parJson)\n\n                if (parJson.token) {\n                    this.setState(() => {\n                        return {\n                            userDetails: parJson,\n                            loginModal: false,\n                            islogin: true\n                        }\n                    })\n                }\n\n            })\n\n    }\n\n    navTo(page) {\n\n        this.setState(() => {\n            return {\n                whichPage: page\n            }\n        })\n    }\n\n    // User defined functions -----------------------\n\n\n    constructor(props) {\n        super(props)\n        this.dologin = this.dologin.bind(this)\n        this.loginmenu = this.loginmenu.bind(this)\n        this.remLogReg = this.remLogReg.bind(this)\n        this.regUser = this.regUser.bind(this)\n        this.navTo = this.navTo.bind(this)\n\n\n        this.state = {\n\n\n\n            userDetails: {},\n            islogin: false,\n            loginModal: false,\n            whichPage: \"home\"\n\n        }\n\n    }\n\n    render() {\n\n        let page;\n        if (this.state.whichPage === \"home\") {\n            page = (<Home />)\n        }\n        if (this.state.whichPage === \"profile\") {\n            page = (<div>Pro</div>)\n        }\n        if (this.state.whichPage === \"CrArt\") {\n            page = (<div>todo create articles</div>)\n        }\n\n\n        console.log(page)\n\n        return (\n\n            <div>\n\n                {\n                    this.state.loginModal ?\n\n                        < LoginReg\n                            dologin={this.dologin}\n                            remLogReg={this.regUser}\n                        />\n                        : null\n                }\n\n                <Nav\n                    navTo={this.navTo}\n                    islogin={this.state.islogin}\n                    loginbtn={this.loginmenu}\n                    userPic={this.state.userDetails.image ? this.state.userDetails.image : defaultUserPro}\n                />\n\n                {page}\n\n\n            </div>\n\n        )\n\n\n\n\n    }\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/styles.scss';\nimport App from './Container/App'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}